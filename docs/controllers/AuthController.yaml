/api/v1/auth/login:
  post:
    summary: Login
    tags:
      - Auth
    requestBody:
      content:
        application/x-www-form-urlencoded:
          schema:
            properties:
              username:
                type: string
                example: buyer1@test.com
              password:
                type: string
                format: password
                example: test   
              origin:
                $ref: '#/components/schemas/UserOrigin'
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/User'
                - type: object
                  properties:
                    token:
                      description: JWT authorization token
                      type: string
                      example: <token>
      '401':
        description: Not Authorized

/api/v1/auth/token:
  post:
    summary: RefreshToken
    tags:
      - Auth
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  description: JWT authorization token
                  type: string
                  example: <token>
      '401':
        description: Not Authorized

/api/v1/auth/logout:
  get:
    summary: Logout
    tags:
      - Auth
    responses:
      '200':
        description: OK

/api/v1/auth/resetpassword:
  post:
    summary: ResetPassword
    tags:
      - Auth
    requestBody:
      content:
        application:json:
          schema:
            type: object
            properties:
              email:
                description: email address of user to reset password of
                type: string
                example: test@test.com
              origin:
                $ref: '#/components/schemas/Origin'

    responses:
      '200':
        description: OK

/api/v1/auth/register:
  post:
    summary: RegisterUser
    tags:
      - Auth
    requestBody:
      $ref: '#/components/requestBodies/UserAdd'
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'

      '400':
        description: BAD_REQUEST
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error code
                  example: InvalidParameter
                details:
                  type: object
                  description: Map of fields to error message            

/api/v1/auth/changepassword:
  post:
    summary: ChangeUserPassword
    tags:
      - Auth
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              oldPassword:
                description: Old password
                type: string
                example: password
              newPassword:
                description: New password
                type: string
                example: password
              newConfirmPassword:
                description: New password confirmation
                type: string
                example: password
    responses:
      '200':
        description: OK

/api/v1/auth/forgotpassword:
  post:
    summary: ForgotUserPassowrd
    tags:
      - Auth
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                description: Email address
                type: string
                example: email@host.com
    responses:
      '200':
        description: OK

/api/v1/auth/verifyemail:
  post:
    summary: SendVerifyEmail
    tags:
      - Auth
    requestBody:
      content:
        application:json:
          schema:
            type: object
            properties:
              email:
                description: email address of user to sent email to
                type: string
                example: test@test.com
              origin:
                $ref: '#/components/schemas/Origin'

    responses:
      '200':
        description: OK

/api/v1/auth/verifyemail/{verificationCode}:
  post:
    summary: VerifyUserEmail
    tags:
      - Auth
    parameters:
      - name: verificationCode
        description: Verification code returned during registration
        required: true
        in: path
        schema:
          type: string
          example: '1234'
    requestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              password:
                description: Password
                type: string
                example: password
              confirmPassword:
                description: Password confirmation
                type: string
                example: password
    responses:
      '200':
        description: OK

/api/v1/session:

  get:
      summary: GetSession
      tags:
        - Auth
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  options:
                    type: array
                    items: 
                      type: string                      